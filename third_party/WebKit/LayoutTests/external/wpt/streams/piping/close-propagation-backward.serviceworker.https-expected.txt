This is a testharness.js-based test.
Harness Error. harness_status.status = 1 , harness_status.message = assert_array_equals: close must always be called with the controller lengths differ, expected 1 got 0
PASS Service worker test setup 
FAIL Closing must be propagated backward: starts closed; preventCancel omitted; fulfilled cancel promise assert_array_equals: lengths differ, expected 1 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel omitted; rejected cancel promise assert_array_equals: lengths differ, expected 1 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel = undefined (falsy); fulfilled cancel promise assert_array_equals: lengths differ, expected 1 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel = null (falsy); fulfilled cancel promise assert_array_equals: lengths differ, expected 1 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel = false (falsy); fulfilled cancel promise assert_array_equals: lengths differ, expected 1 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel = 0 (falsy); fulfilled cancel promise assert_array_equals: lengths differ, expected 1 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel = -0 (falsy); fulfilled cancel promise assert_array_equals: lengths differ, expected 1 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel = NaN (falsy); fulfilled cancel promise assert_array_equals: lengths differ, expected 1 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel =  (falsy); fulfilled cancel promise assert_array_equals: lengths differ, expected 1 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel = true (truthy) assert_array_equals: lengths differ, expected 1 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel = a (truthy) assert_array_equals: lengths differ, expected 1 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel = 1 (truthy) assert_array_equals: lengths differ, expected 1 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel = Symbol() (truthy) assert_array_equals: lengths differ, expected 1 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel = [object Object] (truthy) assert_array_equals: lengths differ, expected 1 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel = true, preventAbort = true assert_array_equals: lengths differ, expected 1 got 0
FAIL Closing must be propagated backward: starts closed; preventCancel = true, preventAbort = true, preventClose = true assert_array_equals: lengths differ, expected 1 got 0
Harness: the test ran to completion.

